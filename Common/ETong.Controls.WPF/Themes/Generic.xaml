<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:etong="clr-namespace:ETong.Controls.WPF">


    <Style TargetType="{x:Type etong:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type etong:ImageButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type etong:TextComboBox}" TargetType="etong:TextComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="IsEditable" Value="True"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="etong:TextComboBox">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter ContentSource="Header"  
											  Width="{TemplateBinding HeaderWidth}"   ></ContentPresenter>

                            <TextBox x:Name="PART_EditableTextBox" 
									 Grid.Column="1"
									 Style="{TemplateBinding EditBoxStyle}" 
									Focusable="True" IsReadOnly="True" />
                            <Viewbox Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,10,0" Panel.ZIndex="2" Stretch="Uniform" Height="20" Width="20">
                                <Polygon x:Name="ButtonPolygon" Points="10,10 90,10 50,60" Stroke="#FF0080D5" StrokeThickness="1">
                                    <Polygon.Fill>
                                        <SolidColorBrush Color="#FF0080D5" Opacity="0.8"/>
                                    </Polygon.Fill>
                                </Polygon>
                            </Viewbox>

                        </Grid>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True" 
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxWidth="{TemplateBinding MaxDropDownWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border BorderBrush="#FFFD8B0E" BorderThickness="1"
                                        x:Name="DropDownBorder" Padding="3" Background="White" >
                                    <Grid  Background="White">
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                            <RowDefinition  Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <WrapPanel IsItemsHost="True" />
                                        <Button  Grid.Row="1"  Name="PART_CloseButton"
                                                 Style="{TemplateBinding CloseButtonStyle}"	Content="关闭">
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--水印样式-->
    <Style TargetType="{x:Type etong:WateMarkTextBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="WatermaskTextBoxWatermaskForeground" Color="LightGray" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type etong:WateMarkTextBox}">
                    <Border x:Name="Border" CornerRadius="2" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        <Grid>
                            <Label x:Name="TextPrompt" Content="{TemplateBinding WateMark}" Focusable="False"
                                   Foreground="{DynamicResource WatermaskTextBoxWatermaskForeground}" Height="{TemplateBinding Height}"
                                   Visibility="Collapsed" Padding="10,0,0,0" VerticalContentAlignment="Center"/>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!--<Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>-->
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" 
                                    Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type etong:WatermarkedPasswordBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="WatermaskTextBoxWatermaskForeground" Color="LightGray" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type etong:WatermarkedPasswordBox}">
                    <Border x:Name="EnabledBorder" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" >
                        <Grid>
                            <ContentControl x:Name="watermarkContent" Content="{TemplateBinding Watermark}" Focusable="False"
                                            Foreground="{DynamicResource WatermaskTextBoxWatermaskForeground}"
                                            Height="{TemplateBinding Height}"
                                            Visibility="Collapsed" Margin="10,0,0,0"
                                            VerticalContentAlignment="Center" 
                                            Background="Transparent" />
                            <PasswordBox x:Name="ContentElement"
                                             Background="Transparent"
                                             BorderThickness="0" Margin="10,0,0,0"
                                             VerticalContentAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="EnabledBorder" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EnabledBorder" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
                            <Setter TargetName="EnabledBorder" Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="watermarkContent" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="EnabledBorder" 
                                    Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						xmlns:y="clr-namespace:System.Windows;assembly=PresentationFramework"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:etong="clr-namespace:ETong.Controls.WPF"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ETong.Controls.WPF;Component/Themes/Button_Style.xaml"></ResourceDictionary>
        <ResourceDictionary>
            <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Height" Value="75"/>
                <Setter Property="FontSize" Value="28"/>
                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="InputPasswordtBoxStyle" TargetType="PasswordBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Height" Value="75"/>
                <Setter Property="FontSize" Value="28"/>
                <Style.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="smallMetroRedButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="150 "/>
                <Setter Property="FontSize" Value="24 "/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid d:DesignWidth="200" d:DesignHeight="48">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mouseDownBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="normalBorder" Background="#FFEB4201" BorderBrush="{x:Null}" />
                                <Border x:Name="mouseDownBorder" Opacity="0" Background="#FFFD8C0C" />

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="#4C1800"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AutoWrapItemStyle" TargetType="etong:TextComboBox" >
                <Setter Property="HeaderWidth" Value="80"></Setter>
                <Setter Property="Width" Value="300"></Setter>
                <Setter Property="MaxDropDownWidth" Value="800"></Setter>
                <Setter Property="MaxDropDownHeight" Value="Auto"></Setter>
                <Setter Property="EditBoxStyle">
                    <Setter.Value>
                        <Style TargetType="TextBox">
                            <Setter Property="FontSize" Value="22"></Setter>
                            <Setter Property="BorderBrush" Value="#FF1AAED6"></Setter>
                            <Setter Property="BorderThickness" Value="1"></Setter>
                            <Setter Property="Padding" Value="10" />
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid Background="#FF04A8DD" Height="55">
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock Text="{Binding}" FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"></TextBlock>
                                </StackPanel>

                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Setter  Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Width" Value="180"></Setter>
                            <Setter Property="Height" Value="55"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <RadioButton  Focusable="False"
											  GroupName="Items"
										Margin="5" FontSize="20" 
										IsEnabled="{TemplateBinding IsEnabled}"
										IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsSelected, Mode=TwoWay}" 
										Style="{StaticResource PickRadioButtonStyle}" >
                                            <ContentPresenter></ContentPresenter>
                                        </RadioButton>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter  Property="CloseButtonStyle" Value="{StaticResource smallMetroRedButtonStyle}"></Setter>

                <!--<Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="EditBoxStyle">
                    <Setter.Value>
                        <Style TargetType="TextBox">
                            <Setter Property="FontSize" Value="26"></Setter>
                            <Setter Property="BorderBrush" Value="Orange"></Setter>
                            <Setter Property="BorderThickness" Value="2"></Setter>
                            <Setter Property="Padding" Value="10" />
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid Background="Orange" Height="65">
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock Text="{Binding}" FontSize="26" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5"></TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>
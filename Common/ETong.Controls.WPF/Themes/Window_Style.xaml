<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MaxWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowState" Value="Maximized"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="#5F999999"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Width" Value="auto"/>
    </Style>
    
	<ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
			<Grid>
				<AdornerDecorator>
					<ContentPresenter/>
				</AdornerDecorator>
				<ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
					<Condition Property="WindowState" Value="Normal"/>
				</MultiTrigger.Conditions>
				<Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="MessageBoxWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="WindowState" Value="Maximized"/>
		<Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Topmost" Value="True"/>
		<Setter Property="ShowInTaskbar" Value="False"/>
		<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStory">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                           Storyboard.TargetName="border">
								<EasingDoubleKeyFrame KeyTime="0" Value="-800"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border1">
                    			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    			<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.7"/>
                    		</DoubleAnimationUsingKeyFrames>-->
						</Storyboard>
						<Storyboard x:Key="CloseStory">
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                             From="0" To="-800" Duration="0:0:0.2" Storyboard.TargetName="border"/>

						</Storyboard>
					</ControlTemplate.Resources>
					<Grid >
						<Border x:Name="border1" Opacity="0.7" Background="#FF898989"/>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" MinHeight="300" MinWidth="400" HorizontalAlignment="Center"
                                VerticalAlignment="Center" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
							<AdornerDecorator>
								<ContentPresenter/>
							</AdornerDecorator>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
				<Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>